



<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>angular-foundation/mm-foundation-tpls-0.4.0.min.js at gh-pages Â· pineconellc/angular-foundation</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="pineconellc/angular-foundation" name="twitter:title" /><meta content="Contribute to angular-foundation development by creating an account on GitHub." name="twitter:description" /><meta content="https://avatars0.githubusercontent.com/u/8482210?v=2&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars0.githubusercontent.com/u/8482210?v=2&amp;s=400" property="og:image" /><meta content="pineconellc/angular-foundation" property="og:title" /><meta content="https://github.com/pineconellc/angular-foundation" property="og:url" /><meta content="Contribute to angular-foundation development by creating an account on GitHub." property="og:description" />

      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="947A38C6:08ED:16854E3:544BEFE0" name="octolytics-dimension-request_id" /><meta content="3776528" name="octolytics-actor-id" /><meta content="stianwestvig" name="octolytics-actor-login" /><meta content="c13bb1a5a9c659fa7e4e499ed2c6b1d0d6a2c9fafe8170bcd6ea41e22700c4d4" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="GBzMRD/b4+7C+S10Xb+frnpWWqinx72awNAmgI2tvbCllBUQCI/VRzt1EhbbJUbP4ZezUOSc1PoNh5ad/DtCPw==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-fd24da028f7f2d737c9a6d97bdd8aa7a5d7ec419c4cc4e89b169d30c58bed96b.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://assets-cdn.github.com/assets/github2-e601e4dc2eec6decc441b9f7e15eec77891539a1a5e2d8af7af600d1d061a150.css" media="all" rel="stylesheet" type="text/css" />
    
    


    <meta http-equiv="x-pjax-version" content="e375408a179f2ef68cd4fb7efa2d26f7">

      
  <meta name="description" content="Contribute to angular-foundation development by creating an account on GitHub.">
  <meta name="go-import" content="github.com/pineconellc/angular-foundation git https://github.com/pineconellc/angular-foundation.git">

  <meta content="8482210" name="octolytics-dimension-user_id" /><meta content="pineconellc" name="octolytics-dimension-user_login" /><meta content="15955025" name="octolytics-dimension-repository_id" /><meta content="pineconellc/angular-foundation" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="15955025" name="octolytics-dimension-repository_network_root_id" /><meta content="pineconellc/angular-foundation" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/pineconellc/angular-foundation/commits/gh-pages.atom" rel="alternate" title="Recent Commits to angular-foundation:gh-pages" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production macintosh vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" ga-data-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/pineconellc/angular-foundation/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/pineconellc/angular-foundation/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/stianwestvig" data-ga-click="Header, go to profile, text:username">
      <img alt="Stian Westvig" class="avatar" data-user="3776528" height="20" src="https://avatars2.githubusercontent.com/u/3776528?v=2&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">stianwestvig</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="pineconellc/angular-foundation">This repository</span>
    </li>
      <li>
        <a href="/pineconellc/angular-foundation/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have no unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:read" data-hotkey="g n">
        <span class="mail-status all-read"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="Wkp/dxn9o0iXAcaCRecuSNox72we4mr7nZEMY0VB+01tuzF8at5JU9uf0a+63kUwLfV3Kn2C49O+kvkJKryJdg==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

      

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="ZmqZQKfb+ru6Bj3ZDOMztHUZbz3StgNMJwV9KcaL3GoMqPck7fDvbPxxrElucQ91coOaIUVMmclXRsuag0SpqQ==" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="15955025" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/pineconellc/angular-foundation/watchers">
        63
      </a>
      <a href="/pineconellc/angular-foundation/subscription"
        class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
        <span class="js-select-button">
          <span class="octicon octicon-eye"></span>
          Watch
        </span>
      </a>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
            <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">Be notified when participating or @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">Be notified of all conversations.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">Never be notified.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/pineconellc/angular-foundation/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="BINAtNNglFBTQsA+qPYFNAPodysxsdI0Fx0VMvGsaaz8zrWeiEroh2X11NsnGvHe8dEqvQo6BKLq4A9shdEUrw==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Unstar this repository" title="Unstar pineconellc/angular-foundation">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/pineconellc/angular-foundation/stargazers">
          727
        </a>
</form>
    <form accept-charset="UTF-8" action="/pineconellc/angular-foundation/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="GichJkcIaRRTjXCZ3FS+uvE43ZzuTWFNXt4m14f6ITg2mwk479zc/+0G4OEYIngCo+320/hD49EHLs9fGNMMoA==" /></div>
      <button
        class="minibutton with-count js-toggler-target star-button"
        aria-label="Star this repository" title="Star pineconellc/angular-foundation">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/pineconellc/angular-foundation/stargazers">
          727
        </a>
</form>  </div>

  </li>


        <li>
          <a href="/pineconellc/angular-foundation/fork" class="minibutton with-count js-toggler-target fork-button tooltipped-n" title="Fork your own copy of pineconellc/angular-foundation to your account" aria-label="Fork your own copy of pineconellc/angular-foundation to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/pineconellc/angular-foundation/network" class="social-count">159</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/pineconellc" class="url fn" itemprop="url" rel="author"><span itemprop="title">pineconellc</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/pineconellc/angular-foundation" class="js-current-repository js-repo-home-link" data-pjax-container-selector="#js-repo-pjax-container">angular-foundation</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<div class="sunken-menu vertical-right repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders" role="navigation" data-issue-count-url="/pineconellc/angular-foundation/issues/counts" data-pjax-container-selector="#js-repo-pjax-container">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped tooltipped-w" aria-label="Code">
        <a href="/pineconellc/angular-foundation/tree/gh-pages" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /pineconellc/angular-foundation/tree/gh-pages">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped tooltipped-w" aria-label="Issues">
          <a href="/pineconellc/angular-foundation/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /pineconellc/angular-foundation/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class="js-issue-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
        <a href="/pineconellc/angular-foundation/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-hotkey="g p" data-selected-links="repo_pulls /pineconellc/angular-foundation/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class="js-pull-replace-counter"></span>
            <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped tooltipped-w" aria-label="Pulse">
        <a href="/pineconellc/angular-foundation/pulse/weekly" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /pineconellc/angular-foundation/pulse/weekly">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped tooltipped-w" aria-label="Graphs">
        <a href="/pineconellc/angular-foundation/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /pineconellc/angular-foundation/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


  </div>
</div>

              <div class="only-with-full-nav">
                
  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/pineconellc/angular-foundation.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pineconellc/angular-foundation.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="git@github.com:pineconellc/angular-foundation.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="git@github.com:pineconellc/angular-foundation.git" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group">
    <input type="text" class="input-mini input-monospace js-url-field"
           value="https://github.com/pineconellc/angular-foundation" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="https://github.com/pineconellc/angular-foundation" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>

  <a href="http://mac.github.com" data-url="github-mac://openRepo/https://github.com/pineconellc/angular-foundation" class="minibutton sidebar-button js-conduit-rewrite-url" title="Save pineconellc/angular-foundation to your computer and use it in GitHub Desktop." aria-label="Save pineconellc/angular-foundation to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>


                <a href="/pineconellc/angular-foundation/archive/gh-pages.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of pineconellc/angular-foundation as a zip file"
                   title="Download the contents of pineconellc/angular-foundation as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/pineconellc/angular-foundation/blob/dac5c2a05314eb6c28f7a93dfe212269f1a0e616/mm-foundation-tpls-0.4.0.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:60774de75f6488d0106af103623af9af -->

<div class="file-navigation">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="gh-pages"
    title="gh-pages"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">gh-pages</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/blob/gh-pages/mm-foundation-tpls-0.4.0.min.js"
                 data-name="gh-pages"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="gh-pages">gh-pages</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/blob/master/mm-foundation-tpls-0.4.0.min.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/blob/slider/mm-foundation-tpls-0.4.0.min.js"
                 data-name="slider"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="slider">slider</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/blob/travis_support/mm-foundation-tpls-0.4.0.min.js"
                 data-name="travis_support"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="travis_support">travis_support</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/v0.1.0/mm-foundation-tpls-0.4.0.min.js"
                 data-name="v0.1.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="v0.1.0">v0.1.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.4.0/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.4.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.4.0">0.4.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.3.1/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.3.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.1">0.3.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.3.0/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.3.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.3.0">0.3.0</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.2.2/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.2.2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.2">0.2.2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.2.1/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.2.1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.1">0.2.1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/pineconellc/angular-foundation/tree/0.2.0/mm-foundation-tpls-0.4.0.min.js"
                 data-name="0.2.0"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text css-truncate-target"
                 title="0.2.0">0.2.0</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="button-group right">
    <a href="/pineconellc/angular-foundation/find/gh-pages"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button class="js-zeroclipboard minibutton zeroclipboard-button"
          data-clipboard-text="mm-foundation-tpls-0.4.0.min.js"
          aria-label="Copy to clipboard"
          data-copied-hint="Copied!">
      <span class="octicon octicon-clippy"></span>
    </button>
  </div>

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/pineconellc/angular-foundation/tree/gh-pages" class="" data-branch="gh-pages" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">angular-foundation</span></a></span></span><span class="separator"> / </span><strong class="final-path">mm-foundation-tpls-0.4.0.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Jeff Browning" class="avatar" data-user="123726" height="24" src="https://avatars1.githubusercontent.com/u/123726?v=2&amp;s=48" width="24" />
        <span class="author"><a href="/jbrowning" rel="contributor">jbrowning</a></span>
        <time datetime="2014-10-15T14:10:17Z" is="relative-time">Oct 15, 2014</time>
        <div class="commit-title">
            <a href="/pineconellc/angular-foundation/commit/dac5c2a05314eb6c28f7a93dfe212269f1a0e616" class="message" data-pjax="true" title="chore(release): release 0.4.0">chore(release): release 0.4.0</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Jeff Browning" data-user="123726" height="24" src="https://avatars1.githubusercontent.com/u/123726?v=2&amp;s=48" width="24" />
            <a href="/jbrowning">jbrowning</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
          <span>10 lines (9 sloc)</span>
          <span class="meta-divider"></span>
        <span>49.405 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
          <a href="/pineconellc/angular-foundation/raw/gh-pages/mm-foundation-tpls-0.4.0.min.js" class="minibutton " id="raw-url">Raw</a>
            <a href="/pineconellc/angular-foundation/blame/gh-pages/mm-foundation-tpls-0.4.0.min.js" class="minibutton js-update-url-with-hash">Blame</a>
          <a href="/pineconellc/angular-foundation/commits/gh-pages/mm-foundation-tpls-0.4.0.min.js" class="minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->

          <a class="octicon-button tooltipped tooltipped-nw js-conduit-openfile-check"
             href="http://mac.github.com"
             data-url="github-mac://openRepo/https://github.com/pineconellc/angular-foundation?branch=gh-pages&amp;filepath=mm-foundation-tpls-0.4.0.min.js"
             aria-label="Open this file in GitHub for Mac"
             data-failed-title="Your version of GitHub for Mac is too old to open this file. Try checking for updates.">
              <span class="octicon octicon-device-desktop"></span>
          </a>

              <a class="octicon-button tooltipped tooltipped-n js-update-url-with-hash"
                 aria-label="Clicking this button will fork this project so you can edit the file"
                 href="/pineconellc/angular-foundation/edit/gh-pages/mm-foundation-tpls-0.4.0.min.js"
                 data-method="post" rel="nofollow"><span class="octicon octicon-pencil"></span></a>

            <a class="octicon-button danger tooltipped tooltipped-s"
               href="/pineconellc/angular-foundation/delete/gh-pages/mm-foundation-tpls-0.4.0.min.js"
               aria-label="Fork this project and delete file"
               data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          <span class="octicon octicon-trashcan"></span>
        </a>
      </div><!-- /.actions -->
    </div>
    
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line"><span class="cm">/*</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="cm"> * angular-mm-foundation</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="cm"> * http://pineconellc.github.io/angular-foundation/</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line">
</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="cm"> * Version: 0.4.0 - 2014-10-15</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="cm"> * License: MIT</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line"><span class="cm"> * (c) Pinecone, LLC</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="cm"> */</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.tpls&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.accordion&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.alert&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.bindHtml&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.buttons&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.mediaQueries&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.dropdownToggle&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.interchange&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.transition&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.modal&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.offcanvas&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.pagination&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.popover&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.progressbar&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.rating&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.tabs&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.topbar&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.tour&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.typeahead&quot;</span><span class="p">]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.tpls&quot;</span><span class="p">,[</span><span class="s2">&quot;template/accordion/accordion-group.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/accordion/accordion.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/alert/alert.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/modal/backdrop.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/modal/window.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/pagination/pager.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/pagination/pagination.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/tooltip/tooltip-html-unsafe-popup.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/tooltip/tooltip-popup.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/popover/popover.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/progressbar/bar.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/progressbar/progress.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/progressbar/progressbar.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/rating/rating.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/tabs/tab.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/tabs/tabset.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/topbar/has-dropdown.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/topbar/toggle-top-bar.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/topbar/top-bar-dropdown.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/topbar/top-bar-section.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/topbar/top-bar.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/tour/tour.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/typeahead/typeahead-match.html&quot;</span><span class="p">,</span><span class="s2">&quot;template/typeahead/typeahead-popup.html&quot;</span><span class="p">]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.accordion&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;accordionConfig&quot;</span><span class="p">,{</span><span class="nx">closeOthers</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;AccordionController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;accordionConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="o">=</span><span class="p">[],</span><span class="k">this</span><span class="p">.</span><span class="nx">closeOthers</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">addGroup</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeGroup</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeGroup</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="o">-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">groups</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordion&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;AccordionController&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/accordion/accordion.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionGroup&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordion&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/accordion/accordion-group.html&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">heading</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setHeading</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">heading</span><span class="o">=</span><span class="nx">a</span><span class="p">}},</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">addGroup</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">isOpen</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=!!</span><span class="nx">a</span><span class="p">})),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;isOpen&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">closeOthers</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">a</span><span class="p">)})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionHeading&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">template</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordionGroup&quot;</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">setHeading</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(){}))}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;accordionTransclude&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^accordionGroup&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">accordionTransclude</span><span class="p">]},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.alert&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;AlertController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">closeable</span><span class="o">=</span><span class="s2">&quot;close&quot;</span><span class="k">in</span> <span class="nx">b</span><span class="p">}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;alert&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;AlertController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/alert/alert.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">close</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.bindHtml&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;bindHtmlUnsafe&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;ng-binding&quot;</span><span class="p">).</span><span class="nx">data</span><span class="p">(</span><span class="s2">&quot;$binding&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">bindHtmlUnsafe</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bindHtmlUnsafe</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)})}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.buttons&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;buttonConfig&quot;</span><span class="p">,{</span><span class="nx">activeClass</span><span class="o">:</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="nx">toggleEvent</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,[</span><span class="s2">&quot;buttonConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">activeClass</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="p">}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;btnRadio&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;btnRadio&quot;</span><span class="p">,</span><span class="s2">&quot;ngModel&quot;</span><span class="p">],</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnRadio</span><span class="p">)))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnRadio</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;btnCheckbox&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;btnCheckbox&quot;</span><span class="p">,</span><span class="s2">&quot;ngModel&quot;</span><span class="p">],</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ButtonsController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnCheckboxTrue</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">btnCheckboxFalse</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">i</span><span class="p">.</span><span class="nx">$render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">equals</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">$modelValue</span><span class="p">,</span><span class="nx">e</span><span class="p">()))},</span><span class="nx">b</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">toggleEvent</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="p">.</span><span class="nx">$setViewValue</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">activeClass</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">()),</span><span class="nx">i</span><span class="p">.</span><span class="nx">$render</span><span class="p">()})})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$position&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">)[</span><span class="nx">c</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;static&quot;</span><span class="o">===</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;position&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;static&quot;</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetParent</span><span class="o">||</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">);)</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">offsetParent</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">||</span><span class="nx">c</span><span class="p">};</span><span class="k">return</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">f</span><span class="o">!=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">clientTop</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="nx">f</span><span class="p">.</span><span class="nx">clientLeft</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">top</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">}},</span><span class="nx">offset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">top</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageYOffset</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollTop</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollTop</span><span class="p">),</span><span class="nx">left</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pageXOffset</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">body</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="o">||</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">scrollLeft</span><span class="p">)}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.mediaQueries&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;matchMedia&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">matchMedia</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstElementChild</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="s2">&quot;mq-test-1&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;position:absolute;top:-100em&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s1">&#39;&amp;shy;&lt;style media=&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;&gt; #mq-test-1 { width: 42px; }&lt;/style&gt;&#39;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="mi">42</span><span class="o">===</span><span class="nx">f</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">e</span><span class="p">),{</span><span class="nx">matches</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">media</span><span class="o">:</span><span class="nx">a</span><span class="p">}}}(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])}]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;mediaQueries&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;matchMedia&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;meta class=&quot;foundation-mq-topbar&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;meta class=&quot;foundation-mq-small&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;meta class=&quot;foundation-mq-medium&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;meta class=&quot;foundation-mq-large&quot; /&gt;&#39;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="sr">/^[\/\\&#39;&quot;]+|(;\s?})+|[\/\\&#39;&quot;]+$/g</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">topbar</span><span class="o">:</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta.foundation-mq-topbar&quot;</span><span class="p">)).</span><span class="nx">fontFamily</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">small</span><span class="o">:</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta.foundation-mq-small&quot;</span><span class="p">)).</span><span class="nx">fontFamily</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">medium</span><span class="o">:</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta.foundation-mq-medium&quot;</span><span class="p">)).</span><span class="nx">fontFamily</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">large</span><span class="o">:</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta.foundation-mq-large&quot;</span><span class="p">)).</span><span class="nx">fontFamily</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)};</span><span class="k">return</span><span class="p">{</span><span class="nx">topbarBreakpoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbar</span><span class="p">).</span><span class="nx">matches</span><span class="p">},</span><span class="nx">small</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">small</span><span class="p">).</span><span class="nx">matches</span><span class="p">},</span><span class="nx">medium</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">medium</span><span class="p">).</span><span class="nx">matches</span><span class="p">},</span><span class="nx">large</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">large</span><span class="p">).</span><span class="nx">matches</span><span class="p">}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.dropdownToggle&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.mediaQueries&quot;</span><span class="p">]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;DropdownToggleController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;mediaQueries&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">small</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">small</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">medium</span><span class="p">()}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;dropdownToggle&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$location&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;CA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">dropdownToggle</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;DropdownToggleController&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropdownToggle</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;$location.path&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">()}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">dropdownToggle</span><span class="p">));</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="o">===</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">h</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">(),</span><span class="o">!</span><span class="nx">k</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;disabled&quot;</span><span class="p">)){</span><span class="nx">j</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;block&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetParent</span><span class="p">)),</span><span class="nx">n</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">l</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">l</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">small</span><span class="p">())</span><span class="nx">o</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">((</span><span class="nx">m</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="nx">n</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="mi">8</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="s2">&quot;95%&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="s2">&quot;max-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">m</span><span class="p">.</span><span class="nx">left</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerWidth</span><span class="o">-</span><span class="nx">n</span><span class="o">-</span><span class="mi">8</span><span class="p">;</span><span class="nx">p</span><span class="o">&gt;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="p">).</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;right&quot;</span><span class="p">)),</span><span class="nx">o</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">p</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">[</span><span class="s2">&quot;max-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">j</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">o</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)}}),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;display&quot;</span><span class="p">,</span><span class="s2">&quot;none&quot;</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.interchange&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.mediaQueries&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;interchangeQueries&quot;</span><span class="p">,[</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;default&quot;</span><span class="o">:</span><span class="s2">&quot;only screen&quot;</span><span class="p">,</span><span class="nx">landscape</span><span class="o">:</span><span class="s2">&quot;only screen and (orientation: landscape)&quot;</span><span class="p">,</span><span class="nx">portrait</span><span class="o">:</span><span class="s2">&quot;only screen and (orientation: portrait)&quot;</span><span class="p">,</span><span class="nx">retina</span><span class="o">:</span><span class="s2">&quot;only screen and (-webkit-min-device-pixel-ratio: 2),only screen and (min--moz-device-pixel-ratio: 2),only screen and (-o-min-device-pixel-ratio: 2/1),only screen and (min-device-pixel-ratio: 2),only screen and (min-resolution: 192dpi),only screen and (min-resolution: 2dppx)&quot;</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;foundation-mq-&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;small&quot;</span><span class="p">,</span><span class="s2">&quot;medium&quot;</span><span class="p">,</span><span class="s2">&quot;large&quot;</span><span class="p">,</span><span class="s2">&quot;xlarge&quot;</span><span class="p">,</span><span class="s2">&quot;xxlarge&quot;</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)),</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s1">&#39;&lt;meta class=&quot;&#39;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;meta.&quot;</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">])),</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^[\/\\&#39;&quot;]+|(;\s?})+|[\/\\&#39;&quot;]+$/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">}]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;interchangeQueriesManager&quot;</span><span class="p">,[</span><span class="s2">&quot;interchangeQueries&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}}]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;interchangeTools&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;matchMedia&quot;</span><span class="p">,</span><span class="s2">&quot;interchangeQueries&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/\[(.*?)\]/</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="sr">/^(.+)\,\ \((.+)\)$/</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/[\W\d]+/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">4</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="mi">3</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]));</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">matches</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]};</span><span class="k">return</span><span class="p">{</span><span class="nx">parseAttribute</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">findCurrentMediaFile</span><span class="o">:</span><span class="nx">e</span><span class="p">}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;interchange&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;interchangeTools&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="sr">/[A-Za-z0-9-_]+\.(jpg|jpeg|png|gif|bmp|tiff)\ *,/i</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">priority</span><span class="o">:</span><span class="mi">450</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;DIV&quot;</span><span class="o">!==</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeName</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">interchange</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s1">&#39;&lt;ng-include src=&quot;currentFile&quot;&gt;&lt;/ng-include&gt;&#39;</span><span class="p">),{</span><span class="nx">pre</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">post</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">fileMap</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">parseAttribute</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">interchange</span><span class="p">),</span><span class="nx">h</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;DIV&quot;</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">findCurrentMediaFile</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fileMap</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="sr">/[A-Za-z0-9-_]+\.(jpg|jpeg|png|gif|bmp|tiff)$/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;background&quot;</span><span class="o">:</span><span class="s2">&quot;include&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;IMG&quot;</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;image&quot;</span><span class="p">;</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="k">return</span><span class="p">}</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">findCurrentMediaFile</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fileMap</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentFile</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentFile</span><span class="o">!==</span><span class="nx">f</span><span class="p">){</span><span class="k">switch</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentFile</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;image&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;src&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentFile</span><span class="p">);</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;background&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;background-image&quot;</span><span class="p">,</span><span class="s2">&quot;url(&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">currentFile</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}</span><span class="nx">b</span><span class="p">.</span><span class="nx">$emit</span><span class="p">(</span><span class="s2">&quot;replace&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()}};</span><span class="nx">i</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">i</span><span class="p">)})}}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.transition&quot;</span><span class="p">,[]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$transition&quot;</span><span class="p">,[</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="o">!==</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="o">||</span><span class="p">{};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">animation</span><span class="o">?</span><span class="s2">&quot;animationEndEventName&quot;</span><span class="o">:</span><span class="s2">&quot;transitionEndEventName&quot;</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">d</span><span class="p">)})};</span><span class="k">return</span> <span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isString</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isObject</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">h</span><span class="p">.</span><span class="nx">promise</span><span class="p">.</span><span class="nx">cancel</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="s2">&quot;Transition cancelled&quot;</span><span class="p">)},</span><span class="nx">h</span><span class="p">.</span><span class="nx">promise</span><span class="p">},</span><span class="nx">f</span><span class="o">=</span><span class="nb">document</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;trans&quot;</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">WebkitTransition</span><span class="o">:</span><span class="s2">&quot;webkitTransitionEnd&quot;</span><span class="p">,</span><span class="nx">MozTransition</span><span class="o">:</span><span class="s2">&quot;transitionend&quot;</span><span class="p">,</span><span class="nx">OTransition</span><span class="o">:</span><span class="s2">&quot;oTransitionEnd&quot;</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;transitionend&quot;</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">WebkitTransition</span><span class="o">:</span><span class="s2">&quot;webkitAnimationEnd&quot;</span><span class="p">,</span><span class="nx">MozTransition</span><span class="o">:</span><span class="s2">&quot;animationend&quot;</span><span class="p">,</span><span class="nx">OTransition</span><span class="o">:</span><span class="s2">&quot;oAnimationEnd&quot;</span><span class="p">,</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;animationend&quot;</span><span class="p">};</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">transitionEndEventName</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">animationEndEventName</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="p">}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.modal&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.transition&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$$stackedMap&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">createNew</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span><span class="p">{</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">key</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">c</span><span class="p">})},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">key</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]},</span><span class="nx">keys</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">key</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">top</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">==</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">key</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">removeTop</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)[</span><span class="mi">0</span><span class="p">]},</span><span class="nx">length</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">}}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;modalBackdrop&quot;</span><span class="p">,[</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/modal/backdrop.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getTop</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="s2">&quot;static&quot;</span><span class="o">!=</span><span class="nx">c</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentTarget</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="s2">&quot;backdrop click&quot;</span><span class="p">))}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;modalWindow&quot;</span><span class="p">,[</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">index</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animate</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">},</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/modal/window.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">windowClass</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">windowClass</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[autofocus]&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;[autofocus]&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">()</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">focus</span><span class="p">()})}}}]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$$stackedMap&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">keys</span><span class="p">(),</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]).</span><span class="nx">value</span><span class="p">.</span><span class="nx">backdrop</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">o</span><span class="p">.</span><span class="nx">remove</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">modalDomEl</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">modalScope</span><span class="p">,</span><span class="mi">300</span><span class="p">,</span><span class="nx">j</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">==</span><span class="nx">h</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">k</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="mi">150</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="kc">null</span><span class="p">}),</span><span class="nx">l</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">done</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">done</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">())}</span><span class="nx">d</span><span class="p">.</span><span class="nx">animate</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">transitionEndEventName</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">g</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()})}</span><span class="k">else</span> <span class="nx">c</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot;modal-open&quot;</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">createNew</span><span class="p">(),</span><span class="nx">p</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="mi">27</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">top</span><span class="p">(),</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">value</span><span class="p">.</span><span class="nx">keyboard</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">p</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">)}))}),</span><span class="nx">p</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">o</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">deferred</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">deferred</span><span class="p">,</span><span class="nx">modalScope</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">scope</span><span class="p">,</span><span class="nx">backdrop</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">backdrop</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">keyboard</span><span class="p">});</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">eq</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">();</span><span class="nx">i</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">$new</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="s2">&quot;&lt;div modal-backdrop&gt;&lt;/div&gt;&quot;</span><span class="p">)(</span><span class="nx">m</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">l</span><span class="p">));</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s1">&#39;&lt;div class=&quot;reveal-modal&quot; style=&quot;z-index:-1&quot;&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]).</span><span class="nx">top</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span><span class="kd">var</span> <span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollY</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s1">&#39;&lt;div modal-window style=&quot;visibility: visible; top:&#39;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s1">&#39;px;&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">);</span><span class="nx">q</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;window-class&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">windowClass</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">length</span><span class="p">()</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;animate&quot;</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">),</span><span class="nx">q</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">content</span><span class="p">);</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">q</span><span class="p">)(</span><span class="nx">c</span><span class="p">.</span><span class="nx">scope</span><span class="p">);</span><span class="nx">o</span><span class="p">.</span><span class="nx">top</span><span class="p">().</span><span class="nx">value</span><span class="p">.</span><span class="nx">modalDomEl</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">r</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="nx">n</span><span class="p">)},</span><span class="nx">p</span><span class="p">.</span><span class="nx">close</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">p</span><span class="p">.</span><span class="nx">dismiss</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">value</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">deferred</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">))},</span><span class="nx">p</span><span class="p">.</span><span class="nx">dismissAll</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTop</span><span class="p">();</span><span class="nx">b</span><span class="p">;)</span><span class="k">this</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">key</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getTop</span><span class="p">()},</span><span class="nx">p</span><span class="p">.</span><span class="nx">getTop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">o</span><span class="p">.</span><span class="nx">top</span><span class="p">()},</span><span class="nx">p</span><span class="p">}]).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$modal&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">options</span><span class="o">:</span><span class="p">{</span><span class="nx">backdrop</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">$get</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$injector&quot;</span><span class="p">,</span><span class="s2">&quot;$rootScope&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$controller&quot;</span><span class="p">,</span><span class="s2">&quot;$modalStack&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">template</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">f</span><span class="p">}).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">})}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isArray</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">invoke</span><span class="p">(</span><span class="nx">a</span><span class="p">)))}),</span><span class="nx">c</span><span class="p">}</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">k</span><span class="p">.</span><span class="nx">open</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">defer</span><span class="p">(),</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">result</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">promise</span><span class="p">,</span><span class="nx">opened</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">promise</span><span class="p">,</span><span class="nx">close</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">close</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">dismiss</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="p">)}};</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="o">||</span><span class="p">{},</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">template</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;One of template or templateUrl options is required.&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">all</span><span class="p">([</span><span class="nx">i</span><span class="p">(</span><span class="nx">b</span><span class="p">)].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">)));</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scope</span><span class="o">||</span><span class="nx">c</span><span class="p">).</span><span class="nx">$new</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">$close</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">close</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$dismiss</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">dismiss</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">controller</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">$scope</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">$modalInstance</span><span class="o">=</span><span class="nx">k</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resolve</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">j</span><span class="o">++</span><span class="p">]}),</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">controller</span><span class="p">,</span><span class="nx">i</span><span class="p">)),</span><span class="nx">h</span><span class="p">.</span><span class="nx">open</span><span class="p">(</span><span class="nx">k</span><span class="p">,{</span><span class="nx">scope</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">deferred</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">backdrop</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">backdrop</span><span class="p">,</span><span class="nx">keyboard</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">keyboard</span><span class="p">,</span><span class="nx">windowClass</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">windowClass</span><span class="p">})},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">reject</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">k</span><span class="p">},</span><span class="nx">k</span><span class="p">}]};</span><span class="k">return</span> <span class="nx">a</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.offcanvas&quot;</span><span class="p">,[]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;offCanvasWrap&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">sidebar</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hide</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;move-left&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;move-right&quot;</span><span class="p">)},</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;resize.body&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">hide</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;resize.body&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">hide</span><span class="p">)})},</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">leftToggle</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s2">&quot;move-right&quot;</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">rightToggle</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">sidebar</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s2">&quot;move-left&quot;</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">hide</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">()}}]}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;leftOffCanvasToggle&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^offCanvasWrap&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">leftToggle</span><span class="p">()})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;rightOffCanvasToggle&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^offCanvasWrap&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">rightToggle</span><span class="p">()})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;exitOffCanvas&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^offCanvasWrap&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">hide</span><span class="p">()})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;offCanvasList&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^offCanvasWrap&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">hide</span><span class="p">()})}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.pagination&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$interpolate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">numPages</span><span class="o">?</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">numPages</span><span class="p">).</span><span class="nx">assign</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="p">()})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">noPrevious</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="mi">1</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">noNext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">===</span><span class="nx">a</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalItems</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">);</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">(</span><span class="nx">b</span><span class="p">)(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">page</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pages</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPages</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">page</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="p">))},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectPage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">isActive</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">page</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">onSelectPage</span><span class="p">({</span><span class="nx">page</span><span class="o">:</span><span class="nx">b</span><span class="p">}))},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;page&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;totalItems&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">totalPages</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">calculateTotalPages</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;totalPages&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">page</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectPage</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">()})}]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;paginationConfig&quot;</span><span class="p">,{</span><span class="nx">itemsPerPage</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">boundaryLinks</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">directionLinks</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">firstText</span><span class="o">:</span><span class="s2">&quot;First&quot;</span><span class="p">,</span><span class="nx">previousText</span><span class="o">:</span><span class="s2">&quot;Previous&quot;</span><span class="p">,</span><span class="nx">nextText</span><span class="o">:</span><span class="s2">&quot;Next&quot;</span><span class="p">,</span><span class="nx">lastText</span><span class="o">:</span><span class="s2">&quot;Last&quot;</span><span class="p">,</span><span class="nx">rotate</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;pagination&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;paginationConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">totalItems</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onSelectPage</span><span class="o">:</span><span class="s2">&quot; &amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/pagination/pagination.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">number</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">boundaryLinks</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">boundaryLinks</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">directionLinks</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">directionLinks</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">firstText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">firstText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">lastText</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">rotate</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotate</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">maxSize</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">maxSize</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">render</span><span class="p">()}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">getPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nb">Math</span><span class="p">.</span><span class="nx">floor</span><span class="p">(</span><span class="nx">h</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">ceil</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">h</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">min</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">)));</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">e</span><span class="o">&gt;=</span><span class="nx">q</span><span class="p">;</span><span class="nx">q</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">isActive</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">r</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;&amp;!</span><span class="nx">o</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;...&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">s</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;...&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">t</span><span class="p">)}}</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">u</span><span class="p">);</span><span class="kd">var</span> <span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noNext</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">v</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">w</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">noNext</span><span class="p">());</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">x</span><span class="p">)}</span><span class="k">return</span> <span class="nx">c</span><span class="p">}}}}]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;pagerConfig&quot;</span><span class="p">,{</span><span class="nx">itemsPerPage</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">previousText</span><span class="o">:</span><span class="s2">&quot;Â« Previous&quot;</span><span class="p">,</span><span class="nx">nextText</span><span class="o">:</span><span class="s2">&quot;Next Â»&quot;</span><span class="p">,</span><span class="nx">align</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;pager&quot;</span><span class="p">,[</span><span class="s2">&quot;pagerConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">page</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">totalItems</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onSelectPage</span><span class="o">:</span><span class="s2">&quot; &amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;PaginationController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/pagination/pager.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">number</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">disabled</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">previous</span><span class="o">:</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">,</span><span class="nx">next</span><span class="o">:</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">previousText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">nextText</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttributeValue</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">align</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">itemsPerPage</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">getPages</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">noPrevious</span><span class="p">(),</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">f</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">noNext</span><span class="p">(),</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)]}}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.tooltip&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.bindHtml&quot;</span><span class="p">]).</span><span class="nx">provider</span><span class="p">(</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/[A-Z]/g</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()})}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">popupDelay</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">mouseenter</span><span class="o">:</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">click</span><span class="o">:</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">focus</span><span class="o">:</span><span class="s2">&quot;blur&quot;</span><span class="p">},</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">setTriggers</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">$get</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;$interpolate&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">){</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">o</span><span class="p">.</span><span class="nx">trigger</span><span class="o">||</span><span class="nx">m</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">show</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">hide</span><span class="o">:</span><span class="nx">d</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">o</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">startSymbol</span><span class="p">(),</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">endSymbol</span><span class="p">(),</span><span class="nx">s</span><span class="o">=</span><span class="s2">&quot;&lt;div &quot;</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="s1">&#39;-popup title=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_title&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; content=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_content&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; placement=&quot;&#39;</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="s2">&quot;tt_placement&quot;</span><span class="o">+</span><span class="nx">r</span><span class="o">+</span><span class="s1">&#39;&quot; animation=&quot;tt_animation&quot; is-open=&quot;tt_isOpen&quot;&gt;&lt;/div&gt;&#39;</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">?</span><span class="nx">m</span><span class="p">()</span><span class="o">:</span><span class="nx">k</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){(</span><span class="o">!</span><span class="nx">z</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Enable&quot;</span><span class="p">]))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="o">?</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">v</span><span class="p">.</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">()}))</span><span class="o">:</span><span class="nx">p</span><span class="p">()())}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">()})}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">tt_content</span><span class="o">?</span><span class="p">(</span><span class="nx">r</span><span class="p">(),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">}),</span><span class="nx">w</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">t</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">t</span><span class="p">),</span><span class="nx">A</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$digest</span><span class="p">(),</span><span class="nx">A</span><span class="p">)</span><span class="o">:</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">v</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_animation</span><span class="o">?</span><span class="nx">u</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="mi">500</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">s</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(){}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$digest</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">s</span><span class="p">(){</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">t</span><span class="o">=</span><span class="kc">null</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">o</span><span class="p">.</span><span class="nx">appendToBody</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">appendToBody</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">void</span> <span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">z</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Enable&quot;</span><span class="p">]),</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="k">switch</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">w</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetWidth&quot;</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_placement</span><span class="p">){</span><span class="k">case</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">10</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">10</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">case</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">e</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">d</span><span class="o">-</span><span class="mi">10</span><span class="p">};</span><span class="k">break</span><span class="p">;</span><span class="k">default</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">top</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">e</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">left</span><span class="p">}}</span><span class="nx">f</span><span class="p">.</span><span class="nx">top</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">left</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">)};</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_content</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">()}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Title&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_title</span><span class="o">=</span><span class="nx">a</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Placement&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_placement</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">placement</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;PopupDelay&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_popupDelay</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">o</span><span class="p">.</span><span class="nx">popupDelay</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">)</span><span class="o">?</span><span class="nx">C</span><span class="p">()</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="p">,</span><span class="nx">m</span><span class="p">)))},</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Trigger&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">B</span><span class="p">(),</span><span class="nx">C</span><span class="p">(),</span><span class="nx">x</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isFunction</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">)</span><span class="o">?</span><span class="nx">C</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">p</span><span class="o">:</span><span class="nx">q</span><span class="p">)})</span><span class="o">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="o">===</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">show</span><span class="p">,</span><span class="nx">k</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">hide</span><span class="p">,</span><span class="nx">m</span><span class="p">)),</span><span class="nx">y</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">D</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;Animation&quot;</span><span class="p">]);</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_animation</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">D</span><span class="p">)</span><span class="o">?!!</span><span class="nx">D</span><span class="o">:</span><span class="nx">o</span><span class="p">.</span><span class="nx">animation</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">$observe</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;AppendToBody&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">}),</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$locationChangeSuccess&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">tt_isOpen</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">()}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">u</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">v</span><span class="p">),</span><span class="nx">B</span><span class="p">(),</span><span class="nx">C</span><span class="p">(),</span><span class="nx">s</span><span class="p">()})}}}}}]}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tooltip/tooltip-popup.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">)}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafePopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tooltip/tooltip-html-unsafe-popup.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafe&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;tooltipHtmlUnsafe&quot;</span><span class="p">,</span><span class="s2">&quot;tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.popover&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.tooltip&quot;</span><span class="p">]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;popoverPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">title</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/popover/popover.html&quot;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;popover&quot;</span><span class="p">,[</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="s2">&quot;popover&quot;</span><span class="p">,</span><span class="s2">&quot;popover&quot;</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.progressbar&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.transition&quot;</span><span class="p">]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;progressConfig&quot;</span><span class="p">,{</span><span class="nx">animate</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="mi">100</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;progressConfig&quot;</span><span class="p">,</span><span class="s2">&quot;$transition&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">[],</span><span class="nx">g</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">addBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$index</span><span class="p">;</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">value</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">update</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeBar</span><span class="p">(</span><span class="nx">a</span><span class="p">)})},</span><span class="k">this</span><span class="p">.</span><span class="nx">update</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">),</span><span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">}))</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">transition</span><span class="o">:</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">})},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeBar</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">getPercentage</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">round</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="nx">a</span><span class="o">/</span><span class="nx">g</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;progress&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;progress&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">template</span><span class="o">:</span><span class="s1">&#39;&lt;div class=&quot;progress&quot; ng-transclude&gt;&lt;/div&gt;&#39;</span><span class="p">}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;bar&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^progress&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/progressbar/bar.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">addBar</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;progressbar&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;ProgressController&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/progressbar/progressbar.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">addBar</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">children</span><span class="p">()[</span><span class="mi">0</span><span class="p">]))}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.rating&quot;</span><span class="p">,[]).</span><span class="nx">constant</span><span class="p">(</span><span class="s2">&quot;ratingConfig&quot;</span><span class="p">,{</span><span class="nx">max</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">stateOn</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">stateOff</span><span class="o">:</span><span class="kc">null</span><span class="p">}).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;RatingController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;$attrs&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;ratingConfig&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">maxRange</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOn</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOff</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">createRateObjects</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">stateOn</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOn</span><span class="p">,</span><span class="nx">stateOff</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">stateOff</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">extend</span><span class="p">({</span><span class="nx">index</span><span class="o">:</span><span class="nx">c</span><span class="p">},</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createRateObjects</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ratingStates</span><span class="p">)</span><span class="o">?</span><span class="nx">angular</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">ratingStates</span><span class="p">))</span><span class="o">:</span><span class="k">new</span> <span class="nb">Array</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">maxRange</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">rate</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">===</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">b</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">enter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onHover</span><span class="p">({</span><span class="nx">value</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">a</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">copy</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">value</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">onLeave</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">val</span><span class="o">=</span><span class="nx">b</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">readonly</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readonly</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">readonly</span><span class="o">=!!</span><span class="nx">b</span><span class="p">})}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;rating&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">value</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">onHover</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">onLeave</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;RatingController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/rating/rating.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.tabs&quot;</span><span class="p">,[]).</span><span class="nx">controller</span><span class="p">(</span><span class="s2">&quot;TabsetController&quot;</span><span class="p">,[</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tabs</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tabs</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">1</span><span class="p">}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">addTab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),(</span><span class="mi">1</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeTab</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">==</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">])}</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabset&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">controller</span><span class="o">:</span><span class="s2">&quot;TabsetController&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tabs/tabset.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">vertical</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">vertical</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">vertical</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">justified</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">justified</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">justified</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;tabs&quot;</span><span class="p">}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tab&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tabset&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tabs/tab.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">heading</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">onSelect</span><span class="o">:</span><span class="s2">&quot;&amp;select&quot;</span><span class="p">,</span><span class="nx">onDeselect</span><span class="o">:</span><span class="s2">&quot;&amp;deselect&quot;</span><span class="p">},</span><span class="nx">controller</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">compile</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">active</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">active</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">assign</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=!!</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;active&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">onSelect</span><span class="p">())</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">onDeselect</span><span class="p">()}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">$parent</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">disabled</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">=!!</span><span class="nx">a</span><span class="p">}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">disabled</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">active</span><span class="o">=!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">f</span><span class="p">.</span><span class="nx">addTab</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeTab</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$transcludeFn</span><span class="o">=</span><span class="nx">d</span><span class="p">}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabHeadingTransclude&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tab&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;headingElement&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;tabContentTransclude&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;tab-heading&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasAttribute</span><span class="p">(</span><span class="s2">&quot;data-tab-heading&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;tab-heading&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">||</span><span class="s2">&quot;data-tab-heading&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">tagName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">())}</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^tabset&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">tabContentTransclude</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">$transcludeFn</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">headingElement</span><span class="o">=</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="nx">b</span><span class="p">)})})}}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.topbar&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.mediaQueries&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;closest&quot;</span><span class="p">,[</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nb">document</span><span class="p">).</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=-</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">[</span><span class="o">++</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">!=</span><span class="nx">a</span><span class="p">;);</span><span class="k">return</span><span class="o">!!</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]},</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">d</span><span class="p">;){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span> <span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentElement</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;topBar&quot;</span><span class="p">,[</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;mediaQueries&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">stickyClass</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">backText</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">stickyOn</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">customBackText</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">isHover</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">mobileShowParentLink</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">scrolltop</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">},</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/topbar/top-bar.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">topbar</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSticky</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyClass</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;</span><span class="s2">&quot;all&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">small</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="s2">&quot;small&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">medium</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="s2">&quot;medium&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">large</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="s2">&quot;large&quot;</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stickyTopbar</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSticky</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyClass</span><span class="p">)),</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrollY</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrollY</span><span class="o">&lt;=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">))}};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toggle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">b</span><span class="o">?!</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrolltop</span><span class="o">?!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">i</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">())))},</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">i</span><span class="p">()){</span><span class="nx">a</span><span class="p">.</span><span class="nx">stickyTopbar</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">().</span><span class="nx">top</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">();</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">!==</span><span class="nx">b</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">(),</span><span class="nx">f</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">),</span><span class="nx">f</span><span class="p">.</span><span class="nx">parent</span><span class="p">().</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;expanded&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;section&quot;</span><span class="p">));</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;li.moved&quot;</span><span class="p">)).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;moved&quot;</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;scroll&quot;</span><span class="p">),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;resize&quot;</span><span class="p">)}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;fixed&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;padding-top&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">)},</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="o">=</span><span class="p">{},</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyClass</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stickyClass</span><span class="o">||</span><span class="s2">&quot;sticky&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">backText</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">backText</span><span class="o">||</span><span class="s2">&quot;Back&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stickyOn</span><span class="o">||</span><span class="s2">&quot;all&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">customBackText</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">customBackText</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">customBackText</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">isHover</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">isHover</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">isHover</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">mobileShowParentLink</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">mobileShowParentLink</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">mobileShowParentLink</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">scrolltop</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrolltop</span><span class="o">?!</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">scrolltop</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">settings</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">settings</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentStyle</span><span class="o">||</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="o">+=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">marginTop</span><span class="p">,</span><span class="mi">10</span><span class="p">)</span><span class="o">+</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">marginBottom</span><span class="p">,</span><span class="mi">10</span><span class="p">)},</span><span class="nx">h</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">addSection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">removeSection</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">1</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="sr">/rtl/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;html&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;dir&quot;</span><span class="p">))</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">$watch</span><span class="p">(</span><span class="s2">&quot;index&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">move</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">toggle</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">reset</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()},</span><span class="k">this</span><span class="p">.</span><span class="nx">back</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">()){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;li.moved&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">parent</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">0</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">a</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;moved&quot;</span><span class="p">)},</span><span class="mi">300</span><span class="p">)}},</span><span class="k">this</span><span class="p">.</span><span class="nx">forward</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">())</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;li&quot;</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;moved&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">originalHeight</span><span class="o">+</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">parent</span><span class="p">()[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelector</span><span class="p">(</span><span class="s2">&quot;ul&quot;</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">index</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">$apply</span><span class="p">()}}]}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;toggleTopBar&quot;</span><span class="p">,[</span><span class="s2">&quot;closest&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^topBar&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/topbar/toggle-top-bar.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentTarget</span><span class="p">),</span><span class="s2">&quot;li&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;back&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;has-dropdown&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">toggle</span><span class="p">()}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">)})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;topBarSection&quot;</span><span class="p">,[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;closest&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^topBar&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/topbar/top-bar-section.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">reset</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;li.moved&quot;</span><span class="p">)).</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;moved&quot;</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">move</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="s2">&quot;left&quot;</span><span class="o">===</span><span class="nx">a</span><span class="o">?</span><span class="p">{</span><span class="nx">left</span><span class="o">:-</span><span class="mi">100</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">}</span><span class="o">:</span><span class="p">{</span><span class="nx">right</span><span class="o">:-</span><span class="mi">100</span><span class="o">*</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;%&quot;</span><span class="p">})},</span><span class="nx">e</span><span class="p">.</span><span class="nx">addSection</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeSection</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">querySelectorAll</span><span class="p">(</span><span class="s2">&quot;li&gt;a&quot;</span><span class="p">);</span><span class="nx">angular</span><span class="p">.</span><span class="nx">forEach</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;li&quot;</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;has-dropdown&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;back&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">hasClass</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">toggle</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">)}))})}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;hasDropdown&quot;</span><span class="p">,[</span><span class="s2">&quot;mediaQueries&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;^topBar&quot;</span><span class="p">,</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/topbar/has-dropdown.html&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">triggerLink</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">children</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">];</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">triggerLink</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">forward</span><span class="p">(</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">isHover</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">addClass</span><span class="p">(</span><span class="s2">&quot;not-click&quot;</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">isHover</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">topbarBreakpoint</span><span class="p">()</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">toggleClass</span><span class="p">(</span><span class="s2">&quot;not-click&quot;</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">removeClass</span><span class="p">(</span><span class="s2">&quot;not-click&quot;</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">)})},</span><span class="nx">controller</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="s2">&quot;$scope&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">triggerLink</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">triggerLink</span><span class="p">}]}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;topBarDropdown&quot;</span><span class="p">,[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">scope</span><span class="o">:</span><span class="p">{},</span><span class="nx">require</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;^topBar&quot;</span><span class="p">,</span><span class="s2">&quot;^hasDropdown&quot;</span><span class="p">],</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/topbar/top-bar-dropdown.html&quot;</span><span class="p">,</span><span class="nx">transclude</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">triggerLink</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;href&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkText</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">text</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">back</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">back</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">backText</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">customBackText</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">backText</span><span class="o">:</span><span class="s2">&quot;&amp;laquo; &quot;</span><span class="o">+</span><span class="nx">h</span><span class="p">.</span><span class="nx">html</span><span class="p">();</span><span class="kd">var</span> <span class="nx">j</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">settings</span><span class="p">.</span><span class="nx">mobileShowParentLink</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="s1">&#39;&lt;li class=&quot;title back js-generated&quot;&gt;&lt;h5&gt;&lt;a href=&quot;#&quot; ng-click=&quot;back($event);&quot;&gt;{{backText}}&lt;/a&gt;&lt;/h5&gt;&lt;/li&gt;&lt;li&gt;&lt;a class=&quot;parent-link js-generated&quot; href=&quot;&#39;</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="s1">&#39;&quot;&gt;{{linkText}}&lt;/a&gt;&lt;/li&gt;&#39;</span><span class="o">:</span><span class="s1">&#39;&lt;li class=&quot;title back js-generated&quot;&gt;&lt;h5&gt;&lt;a href=&quot;&quot; ng-click=&quot;back($event);&quot;&gt;{{backText}}&lt;/a&gt;&lt;/h5&gt;&lt;/li&gt;&#39;</span><span class="p">),</span><span class="nx">a</span><span class="p">(</span><span class="nx">j</span><span class="p">)(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">prepend</span><span class="p">(</span><span class="nx">j</span><span class="p">)}}}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.tour&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.tooltip&quot;</span><span class="p">]).</span><span class="nx">service</span><span class="p">(</span><span class="s2">&quot;$tour&quot;</span><span class="p">,[</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(){</span><span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="s2">&quot;mm.tour.step&quot;</span><span class="p">),</span><span class="mi">10</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="s2">&quot;mm.tour.step&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">has</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]},</span><span class="k">this</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">current</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="k">void</span> <span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="k">this</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">next</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="k">this</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">(</span><span class="mi">0</span><span class="p">)}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;stepTextPopup&quot;</span><span class="p">,[</span><span class="s2">&quot;$tour&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">title</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">content</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">placement</span><span class="o">:</span><span class="s2">&quot;@&quot;</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">,</span><span class="nx">isOpen</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/tour/tour.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">isLastStep</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">has</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">current</span><span class="p">()</span><span class="o">+</span><span class="mi">1</span><span class="p">)},</span><span class="nx">b</span><span class="p">.</span><span class="nx">endTour</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="p">()},</span><span class="nx">b</span><span class="p">.</span><span class="nx">nextStep</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">remove</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">next</span><span class="p">()}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;stepText&quot;</span><span class="p">,[</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;$tooltip&quot;</span><span class="p">,</span><span class="s2">&quot;$tour&quot;</span><span class="p">,</span><span class="s2">&quot;$window&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">bottom</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">-</span><span class="mi">80</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">right</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerWidth</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">stepIndex</span><span class="p">,</span><span class="mi">10</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">isActive</span><span class="p">()</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">h</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">current</span><span class="p">())){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">scrollTo</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHeight</span><span class="o">/</span><span class="mi">2</span><span class="p">)}</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">(</span><span class="s2">&quot;stepText&quot;</span><span class="p">,</span><span class="s2">&quot;step&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;mm.foundation.typeahead&quot;</span><span class="p">,[</span><span class="s2">&quot;mm.foundation.position&quot;</span><span class="p">,</span><span class="s2">&quot;mm.foundation.bindHtml&quot;</span><span class="p">]).</span><span class="nx">factory</span><span class="p">(</span><span class="s2">&quot;typeaheadParser&quot;</span><span class="p">,[</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="sr">/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">parse</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nb">Error</span><span class="p">(</span><span class="s2">&quot;Expected typeahead specification in form of &#39;_modelValue_ (as _label_)? for _item_ in _collection_&#39; but got &#39;&quot;</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;&#39;.&quot;</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">itemName</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="nx">source</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">4</span><span class="p">]),</span><span class="nx">viewMapper</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">modelMapper</span><span class="o">:</span><span class="nx">a</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">])}}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeahead&quot;</span><span class="p">,[</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="s2">&quot;$q&quot;</span><span class="p">,</span><span class="s2">&quot;$timeout&quot;</span><span class="p">,</span><span class="s2">&quot;$document&quot;</span><span class="p">,</span><span class="s2">&quot;$position&quot;</span><span class="p">,</span><span class="s2">&quot;typeaheadParser&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="mi">9</span><span class="p">,</span><span class="mi">13</span><span class="p">,</span><span class="mi">27</span><span class="p">,</span><span class="mi">38</span><span class="p">,</span><span class="mi">40</span><span class="p">];</span><span class="k">return</span><span class="p">{</span><span class="nx">require</span><span class="o">:</span><span class="s2">&quot;ngModel&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadMinLength</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadWaitMs</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$eval</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadEditable</span><span class="p">)</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadLoading</span><span class="p">).</span><span class="nx">assign</span><span class="o">||</span><span class="nx">angular</span><span class="p">.</span><span class="nx">noop</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadOnSelect</span><span class="p">),</span><span class="nx">s</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadInputFormatter</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadInputFormatter</span><span class="p">)</span><span class="o">:</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadAppendToBody</span><span class="o">?</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadAppendToBody</span><span class="p">)</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">ngModel</span><span class="p">).</span><span class="nx">assign</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeahead</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="nx">angular</span><span class="p">.</span><span class="nx">element</span><span class="p">(</span><span class="s2">&quot;&lt;div typeahead-popup&gt;&lt;/div&gt;&quot;</span><span class="p">);</span><span class="nx">w</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">matches</span><span class="o">:</span><span class="s2">&quot;matches&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="s2">&quot;activeIdx&quot;</span><span class="p">,</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;select(activeIdx)&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;query&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;position&quot;</span><span class="p">}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">isDefined</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadTemplateUrl</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;template-url&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">typeaheadTemplateUrl</span><span class="p">);</span><span class="kd">var</span> <span class="nx">x</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">$new</span><span class="p">();</span><span class="nx">i</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">$destroy</span><span class="p">()});</span><span class="kd">var</span> <span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="o">=</span><span class="p">[],</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=-</span><span class="mi">1</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">$viewValue</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">when</span><span class="p">(</span><span class="nx">v</span><span class="p">.</span><span class="nx">source</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">)).</span><span class="nx">then</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">l</span><span class="p">.</span><span class="nx">$viewValue</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">label</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">model</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]});</span><span class="nx">x</span><span class="p">.</span><span class="nx">query</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="nx">t</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">offset</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">position</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">j</span><span class="p">.</span><span class="nx">prop</span><span class="p">(</span><span class="s2">&quot;offsetHeight&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="nx">y</span><span class="p">();</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)}},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">y</span><span class="p">(),</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)})};</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">query</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">;</span><span class="kd">var</span> <span class="nx">A</span><span class="p">;</span><span class="nx">l</span><span class="p">.</span><span class="nx">$parsers</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;=</span><span class="nx">n</span><span class="o">?</span><span class="nx">o</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="p">(</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">cancel</span><span class="p">(</span><span class="nx">A</span><span class="p">),</span><span class="nx">A</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">o</span><span class="p">))</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="p">()),</span><span class="nx">p</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="k">void</span> <span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$formatters</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="k">return</span> <span class="nx">s</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">$model</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="k">void</span> <span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">b</span><span class="o">!==</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">)}),</span><span class="nx">x</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">d</span><span class="p">[</span><span class="nx">v</span><span class="p">.</span><span class="nx">itemName</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">model</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">modelMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">u</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">$setValidity</span><span class="p">(</span><span class="s2">&quot;editable&quot;</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">,{</span><span class="nx">$item</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">$model</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">$label</span><span class="o">:</span><span class="nx">v</span><span class="p">.</span><span class="nx">viewMapper</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">y</span><span class="p">(),</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">focus</span><span class="p">()},</span><span class="nx">j</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;keydown&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="mi">0</span><span class="o">!==</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;-</span><span class="mi">1</span><span class="o">!==</span><span class="nx">h</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">(),</span><span class="mi">40</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())</span><span class="o">:</span><span class="mi">38</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">=</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="o">:</span><span class="nx">x</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())</span><span class="o">:</span><span class="mi">13</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">||</span><span class="mi">9</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">?</span><span class="nx">x</span><span class="p">.</span><span class="nx">$apply</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">x</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="nx">x</span><span class="p">.</span><span class="nx">activeIdx</span><span class="p">)})</span><span class="o">:</span><span class="mi">27</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">which</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stopPropagation</span><span class="p">(),</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">()))}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;blur&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">}),</span><span class="nx">j</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;focus&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="kd">var</span> <span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">!==</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="p">(),</span><span class="nx">x</span><span class="p">.</span><span class="nx">$digest</span><span class="p">())};</span><span class="nx">e</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">$on</span><span class="p">(</span><span class="s2">&quot;$destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">unbind</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">B</span><span class="p">)});</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">w</span><span class="p">)(</span><span class="nx">x</span><span class="p">);</span><span class="nx">t</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">find</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">).</span><span class="nx">append</span><span class="p">(</span><span class="nx">C</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">after</span><span class="p">(</span><span class="nx">C</span><span class="p">)}}}]).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeaheadPopup&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">matches</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">active</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;&amp;&quot;</span><span class="p">},</span><span class="nx">replace</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">templateUrl</span><span class="o">:</span><span class="s2">&quot;template/typeahead/typeahead-popup.html&quot;</span><span class="p">,</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">templateUrl</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">isOpen</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">matches</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">isActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">==</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectActive</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">active</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">selectMatch</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">({</span><span class="nx">activeIdx</span><span class="o">:</span><span class="nx">b</span><span class="p">})}}}}).</span><span class="nx">directive</span><span class="p">(</span><span class="s2">&quot;typeaheadMatch&quot;</span><span class="p">,[</span><span class="s2">&quot;$http&quot;</span><span class="p">,</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="s2">&quot;$compile&quot;</span><span class="p">,</span><span class="s2">&quot;$parse&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">{</span><span class="nx">restrict</span><span class="o">:</span><span class="s2">&quot;EA&quot;</span><span class="p">,</span><span class="nx">scope</span><span class="o">:</span><span class="p">{</span><span class="nx">index</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">match</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">,</span><span class="nx">query</span><span class="o">:</span><span class="s2">&quot;=&quot;</span><span class="p">},</span><span class="nx">link</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">templateUrl</span><span class="p">)(</span><span class="nx">e</span><span class="p">.</span><span class="nx">$parent</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;template/typeahead/typeahead-match.html&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="nx">h</span><span class="p">,{</span><span class="nx">cache</span><span class="o">:</span><span class="nx">b</span><span class="p">}).</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">replaceWith</span><span class="p">(</span><span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">trim</span><span class="p">())(</span><span class="nx">e</span><span class="p">))})}}}]).</span><span class="nx">filter</span><span class="p">(</span><span class="s2">&quot;typeaheadHighlight&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([.?*+^$[\]\\(){}|-])/g</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">)}</span><span class="k">return</span> <span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="k">new</span> <span class="nb">RegExp</span><span class="p">(</span><span class="nx">a</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="s2">&quot;gi&quot;</span><span class="p">),</span><span class="s2">&quot;&lt;strong&gt;$&amp;&lt;/strong&gt;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">}}),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/accordion/accordion-group.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/accordion/accordion-group.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;dd&gt;\n  &lt;a ng-click=&quot;isOpen = !isOpen&quot; ng-class=&quot;{ active: isOpen }&quot;  accordion-transclude=&quot;heading&quot;&gt;{{heading}}&lt;/a&gt;\n  &lt;div class=&quot;content&quot; ng-style=&quot;isOpen ? {display: \&#39;block\&#39;} : {}&quot; ng-transclude&gt;&lt;/div&gt;\n&lt;/dd&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/accordion/accordion.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/accordion/accordion.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;dl class=&quot;accordion&quot; ng-transclude&gt;&lt;/dl&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/alert/alert.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/alert/alert.html&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;div class=&#39;alert-box&#39; ng-class=&#39;(type || \&quot;\&quot;)&#39;&gt;\n  &lt;span ng-transclude&gt;&lt;/span&gt;\n  &lt;a ng-show=&#39;closeable&#39; class=&#39;close&#39; ng-click=&#39;close()&#39;&gt;&amp;times;&lt;/a&gt;\n&lt;/div&gt;\n&quot;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/modal/backdrop.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/modal/backdrop.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;reveal-modal-bg fade&quot; ng-class=&quot;{in: animate}&quot; ng-click=&quot;close($event)&quot; style=&quot;display: block&quot;&gt;&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/modal/window.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/modal/window.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div tabindex=&quot;-1&quot; class=&quot;reveal-modal fade {{ windowClass }}&quot;\n  ng-class=&quot;{in: animate}&quot; style=&quot;display: block; visibility: visible&quot;&gt;\n  &lt;div ng-transclude&gt;&lt;/div&gt;\n&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/pagination/pager.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/pagination/pager.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;ul class=&quot;pagination&quot;&gt;\n  &lt;li ng-repeat=&quot;page in pages&quot; class=&quot;arrow&quot; ng-class=&quot;{unavailable: page.disabled, left: page.previous, right: page.next}&quot;&gt;&lt;a ng-click=&quot;selectPage(page.number)&quot;&gt;{{page.text}}&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/pagination/pagination.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/pagination/pagination.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;ul class=&quot;pagination&quot;&gt;\n  &lt;li ng-repeat=&quot;page in pages&quot; ng-class=&quot;{arrow: $first || $last, current: page.active, unavailable: page.disabled}&quot;&gt;&lt;a ng-click=&quot;selectPage(page.number)&quot;&gt;{{page.text}}&lt;/a&gt;&lt;/li&gt;\n&lt;/ul&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/tooltip/tooltip-html-unsafe-popup.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/tooltip/tooltip-html-unsafe-popup.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;span class=&quot;tooltip tip-{{placement}}&quot;\n  ng-class=&quot;{ in: isOpen(), fade: animation() }&quot;\n  style=&quot;width: auto&quot;&gt;\n  &lt;span bind-html-unsafe=&quot;content&quot;&gt;&lt;/span&gt;\n  &lt;span class=&quot;nub&quot;&gt;&lt;/span&gt;\n&lt;/span&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/tooltip/tooltip-popup.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/tooltip/tooltip-popup.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;span class=&quot;tooltip tip-{{placement}}&quot;\n  ng-class=&quot;{ in: isOpen(), fade: animation() }&quot;\n  style=&quot;width: auto&quot;&gt;\n  &lt;span ng-bind=&quot;content&quot;&gt;&lt;/span&gt;\n  &lt;span class=&quot;nub&quot;&gt;&lt;/span&gt;\n&lt;/span&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/popover/popover.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/popover/popover.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;joyride-tip-guide&quot; ng-class=&quot;{ in: isOpen(), fade: animation() }&quot;&gt;\n  &lt;span class=&quot;joyride-nub&quot; ng-class=&quot;{\n    bottom: placement === \&#39;top\&#39;,\n    left: placement === \&#39;right\&#39;,\n    right: placement === \&#39;left\&#39;,\n    top: placement === \&#39;bottom\&#39;\n  }&quot;&gt;&lt;/span&gt;\n  &lt;div class=&quot;joyride-content-wrapper&quot;&gt;\n    &lt;h4 ng-bind=&quot;title&quot; ng-show=&quot;title&quot;&gt;&lt;/h4&gt;\n    &lt;p ng-bind=&quot;content&quot;&gt;&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/progressbar/bar.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/progressbar/bar.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;span class=&quot;meter&quot; ng-transclude&gt;&lt;/span&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/progressbar/progress.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/progressbar/progress.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;progress&quot; ng-class=&quot;type&quot; ng-transclude&gt;&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/progressbar/progressbar.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/progressbar/progressbar.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;progress&quot; ng-class=&quot;type&quot;&gt;\n  &lt;span class=&quot;meter&quot; ng-transclude&gt;&lt;/span&gt;\n&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/rating/rating.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/rating/rating.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;span ng-mouseleave=&quot;reset()&quot;&gt;\n  &lt;i ng-repeat=&quot;r in range&quot; ng-mouseenter=&quot;enter($index + 1)&quot; ng-click=&quot;rate($index + 1)&quot; class=&quot;fa&quot;\n    ng-class=&quot;$index &lt; val &amp;&amp; (r.stateOn || \&#39;fa-star\&#39;) || (r.stateOff || \&#39;fa-star-o\&#39;)&quot;&gt;&lt;/i&gt;\n&lt;/span&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/tabs/tab.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/tabs/tab.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;dd ng-class=&quot;{active: active}&quot;&gt;\n  &lt;a ng-click=&quot;select()&quot; tab-heading-transclude&gt;{{heading}}&lt;/a&gt;\n&lt;/dd&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/tabs/tabset.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/tabs/tabset.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;tabbable&quot;&gt;\n  &lt;dl class=&quot;tabs&quot; ng-class=&quot;{\&#39;vertical\&#39;: vertical}&quot; ng-transclude&gt;&lt;/dl&gt;\n  &lt;div class=&quot;tabs-content&quot; ng-class=&quot;{\&#39;vertical\&#39;: vertical}&quot;&gt;\n    &lt;div class=&quot;content&quot; \n      ng-repeat=&quot;tab in tabs&quot; \n      ng-class=&quot;{active: tab.active}&quot;&gt;\n      &lt;div tab-content-transclude=&quot;tab&quot;&gt;&lt;/div&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/topbar/has-dropdown.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/topbar/has-dropdown.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;li class=&quot;has-dropdown&quot; ng-transclude&gt;&lt;/li&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/topbar/toggle-top-bar.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/topbar/toggle-top-bar.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;li class=&quot;toggle-topbar menu-icon&quot; ng-transclude&gt;&lt;/li&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar-dropdown.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar-dropdown.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;ul class=&quot;dropdown&quot; ng-transclude&gt;&lt;/ul&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar-section.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar-section.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;section class=&quot;top-bar-section&quot; ng-transclude&gt;&lt;/section&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/topbar/top-bar.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;nav class=&quot;top-bar&quot; ng-transclude&gt;&lt;/nav&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/tour/tour.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/tour/tour.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;div class=&quot;joyride-tip-guide&quot; ng-class=&quot;{ in: isOpen(), fade: animation() }&quot;&gt;\n  &lt;span class=&quot;joyride-nub&quot; ng-class=&quot;{\n    bottom: placement === \&#39;top\&#39;,\n    left: placement === \&#39;right\&#39;,\n    right: placement === \&#39;left\&#39;,\n    top: placement === \&#39;bottom\&#39;\n  }&quot;&gt;&lt;/span&gt;\n  &lt;div class=&quot;joyride-content-wrapper&quot;&gt;\n    &lt;h4 ng-bind=&quot;title&quot; ng-show=&quot;title&quot;&gt;&lt;/h4&gt;\n    &lt;p ng-bind=&quot;content&quot;&gt;&lt;/p&gt;\n    &lt;a class=&quot;small button joyride-next-tip&quot; ng-show=&quot;!isLastStep()&quot; ng-click=&quot;nextStep()&quot;&gt;Next&lt;/a&gt;\n    &lt;a class=&quot;small button joyride-next-tip&quot; ng-show=&quot;isLastStep()&quot; ng-click=&quot;endTour()&quot;&gt;End&lt;/a&gt;\n    &lt;a class=&quot;joyride-close-tip&quot; ng-click=&quot;endTour()&quot;&gt;&amp;times;&lt;/a&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/typeahead/typeahead-match.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/typeahead/typeahead-match.html&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;a tabindex=&quot;-1&quot; bind-html-unsafe=&quot;match.label | typeaheadHighlight:query&quot;&gt;&lt;/a&gt;&#39;</span><span class="p">)}]),</span><span class="nx">angular</span><span class="p">.</span><span class="nx">module</span><span class="p">(</span><span class="s2">&quot;template/typeahead/typeahead-popup.html&quot;</span><span class="p">,[]).</span><span class="nx">run</span><span class="p">([</span><span class="s2">&quot;$templateCache&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">put</span><span class="p">(</span><span class="s2">&quot;template/typeahead/typeahead-popup.html&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;ul class=\&quot;f-dropdown\&quot; ng-style=\&quot;{display: isOpen()&amp;&amp;&#39;block&#39; || &#39;none&#39;, top: position.top+&#39;px&#39;, left: position.left+&#39;px&#39;}\&quot;&gt;\n&quot;</span><span class="o">+</span><span class="s1">&#39;    &lt;li ng-repeat=&quot;match in matches&quot; ng-class=&quot;{active: isActive($index) }&quot; ng-mouseenter=&quot;selectActive($index)&quot; ng-click=&quot;selectMatch($index)&quot;&gt;\n        &lt;div typeahead-match index=&quot;$index&quot; match=&quot;match&quot; query=&quot;query&quot; template-url=&quot;templateUrl&quot;&gt;&lt;/div&gt;\n    &lt;/li&gt;\n&lt;/ul&gt;\n&#39;</span><span class="p">)}]);</span></td>
      </tr>
</table>

  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="https://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.04370s from github-fe128-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents js-suggester-field" placeholder=""></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-dabc650f8a51dffd1d4376a3522cbda5536e4807e01d2a86ff7e60d8d6ee3029.js" type="text/javascript"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-d01013daa80c5a341ba3ddb684f2f26679eb369d67459151d5175a634a9e98a5.js" type="text/javascript"></script>
      
      
  </body>
</html>

